version: '3'

services:

  redis:
    container_name: redis
    image: redis
    ports :
      - "6379:6379"
    volumes :
      - redisstore:/data
    networks:
      - esnet
    deploy:
      placement:
        constraints : [node.role == manager]
  workflow:
    image: docker.openminted.eu/omtd-workflow-server
    networks :
      - esnet
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s

  platform:
    image: docker.openminted.eu/omtd-platform
    ports:
      - "80:80"
    networks :
      - esnet
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s

  registry:
    image: docker.openminted.eu/omtd-registry
    ports:
      - "8080:8080"
    networks :
      - esnet
    volumes:
      - registrydata:/media/maven-data
    env_file : omtd-registry.env
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s

  content-service:
    image: docker.openminted.eu/omtd-content-service
    ports:
      - "8888:8080"
    networks :
      - esnet
    env_file : content-service.env
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s
  
  store-service:
    image: docker.openminted.eu/omtd-store-service
    ports:
      - "8090:8080"
    networks:
      - esnet
    volumes:
      - storeData:/tmp/omtd-store-service/storage
    env_file : omtd-store-service.env
    deploy:
      placement:
        constraints : [node.role == manager]
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s
  
  db:
    image : docker.openminted.eu/omtd-postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - esnet
    deploy:
      placement:
        constraints : [node.role == manager]
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s

  jms:
    image: rmohr/activemq:5.14.0-alpine
    ports:
      - "61616:61616"
    networks:
      - esnet
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - esnet
    deploy:
      placement:
        constraints : [node.role == manager]
      resources:
        mem_limit : 1g
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elastic"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet
    deploy:
      placement:
        constraints : [node.role == worker]  
      resources:
        mem_limit : 1g
      restart_policy:
        condition: on-failure
        max_attempts: 20
        delay: 5s

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  pgdata:
    driver: local
  redisstore:
    driver: local
  storeData:
    driver: local
  registrydata:
    driver: local

networks:
  esnet:
    driver: overlay
